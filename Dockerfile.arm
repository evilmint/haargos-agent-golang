# Builder stage
ARG GOARCH
ARG GOARM
ARG BUILD_PLATFORM
FROM --platform=linux/${BUILD_PLATFORM} golang:1.17 AS builder
ENV GOPROXY=https://proxy.golang.org
ENV GO111MODULE=on
ENV CGO_ENABLED=1
ENV GOOS=linux

ARG GOARCH
ENV GOARCH=${GOARCH}
ENV GOARM=${GOARM}
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y libsqlite3-dev build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set the working directory and add application code
WORKDIR /app
ADD . .

# Copy go mod and sum files and fetch dependencies
COPY go.mod go.sum ./
RUN go mod download

# Set environment for cgo
ENV CGO_ENABLED=1

# Build
RUN CGO_ENABLED=1 GOOS=linux go build -v -o haargos-out .

# Final stage
FROM arm64v8/ubuntu:mantic
WORKDIR /root/
COPY --from=builder /app/haargos-out ./haargos
CMD ["./haargos"]
