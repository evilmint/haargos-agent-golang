# Builder stage
FROM golang:1.17-alpine AS builder
ENV GOPROXY=https://proxy.golang.org
ENV GO111MODULE=on
ENV CGO_ENABLED=1
ENV GOOS=linux
ENV GOARCH=amd64

# Set the working directory and add application code
WORKDIR /app
ADD . .

# Copy go mod and sum files and fetch dependencies
COPY go.mod go.sum ./
RUN go mod download

# Set environment for cgo
ENV CGO_ENABLED=1

# Build for amd64
RUN GOOS=linux GOARCH=amd64 go build -v -o haargos-out .

# Final stage
FROM multiarch/ubuntu-core:amd64-bionic
WORKDIR /root/

COPY --chmod=755 docker-addon/run.sh ./run.sh
COPY --from=builder  /app/haargos-out ./haargos

LABEL \
  io.hass.version="1.0.42" \
  io.hass.type="addon" \
  io.hass.arch="armhf|aarch64|i386|amd64"

CMD ["./run.sh"]
